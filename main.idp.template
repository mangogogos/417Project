vocabulary Tetrominos {
    type XIndex = {0..{maxXIndex}} isa int
    type YIndex = {0..{maxYIndex}} isa int
    type Block = {1..{numBlocks}} isa int
    type Type = { "R"; "S"; "T"; "L"; "Z" } isa char
    type Rotation = { "ROT_0"; "ROT_90"; "ROT_180"; "ROT_270" } isa string

    nR : int
    nS : int
    nT : int
    nL : int
    nZ : int

    BlockType(Block, Type)
    Located(Block, XIndex, YIndex)
    Rotated(Block, Rotation)
    Reflected(Block)
    Has(XIndex, YIndex, Block)
}

structure Packing : Tetrominos {
    // Define the inputs
    nR = {nR}
    nS = {nS}
    nT = {nT}
    nL = {nL}
    nZ = {nZ}

    {reflectionSpecification}
}

procedure main(){
    printmodels(modelexpand(TetrominoPacking, Packing))
}

theory TetrominoPacking : Tetrominos {
    // All blocks have a type and the number of each type is correct
    !b[Block] : ?1 t[Type] : BlockType(b, t).
    #{ b[Block] : BlockType(b, "R") } = nR.
    #{ b[Block] : BlockType(b, "S") } = nS.
    #{ b[Block] : BlockType(b, "T") } = nT.
    #{ b[Block] : BlockType(b, "L") } = nL.
    #{ b[Block] : BlockType(b, "Z") } = nZ.

    // All cells have a block
    !x[XIndex], y[YIndex] : ?1 b[Block] : Has(x, y, b).

    // All blocks have a unique location, reflection, and rotation
    !b[Block] : ?1 x[XIndex], y[YIndex] : Located(b, x, y).
    !b[Block] : ?1 r[Rotation] : Rotated(b, r).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "R") &
        Located(b, x, y) &
        Rotated(b, "ROT_0") =>
            (y + 3 =< {maxYIndex}) &
            Has(x, y + 0, b) &
            Has(x, y + 1, b) &
            Has(x, y + 2, b) &
            Has(x, y + 3, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "R") &
        Located(b, x, y) &
        ((Rotated(b, "ROT_90") & ~Reflected(b)) | (Rotated(b, "ROT_270") & Reflected(b))) =>
            (x - 3 >= 0) &
            Has(x - 0, y, b) &
            Has(x - 1, y, b) &
            Has(x - 2, y, b) &
            Has(x - 3, y, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "R") &
        Located(b, x, y) &
        Rotated(b, "ROT_180") =>
            (y - 3 >= 0) &
            Has(x, y - 0, b) &
            Has(x, y - 1, b) &
            Has(x, y - 2, b) &
            Has(x, y - 3, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "R") &
        Located(b, x, y) & 
        ((Rotated(b, "ROT_90") & Reflected(b)) | (Rotated(b, "ROT_270") & ~Reflected(b))) =>
            (x + 3 >= 0) &
            Has(x + 0, y, b) &
            Has(x + 1, y, b) &
            Has(x + 2, y, b) &
            Has(x + 3, y, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "S") &
        Located(b, x, y) & 
        ((Rotated(b, "ROT_0") & ~Reflected(b)) | (Rotated(b, "ROT_90") & Reflected(b))) =>
            (x + 1 =< {maxXIndex}) &
            (y - 1 >= 0) &
            Has(x + 0, y - 0, b) &
            Has(x + 0, y - 1, b) &
            Has(x + 1, y - 0, b) &
            Has(x + 1, y - 1, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "S") &
        Located(b, x, y) &
        ((Rotated(b, "ROT_0") & Reflected(b)) | (Rotated(b, "ROT_90") & ~Reflected(b))) =>
            (x - 1 >= 0) &
            (y - 1 >= 0) &
            Has(x - 0, y - 0, b) &
            Has(x - 0, y - 1, b) &
            Has(x - 1, y - 0, b) &
            Has(x - 1, y - 1, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "S") &
        Located(b, x, y) &
        ((Rotated(b, "ROT_180") & ~Reflected(b)) | (Rotated(b, "ROT_270") & Reflected(b))) =>
            (x - 1 >= 0) &
            (y + 1 =< {maxYIndex}) &
            Has(x - 0, y + 0, b) &
            Has(x - 0, y + 1, b) &
            Has(x - 1, y + 0, b) &
            Has(x - 1, y + 1, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "S") &
        Located(b, x, y) &
        ((Rotated(b, "ROT_180") & Reflected(b)) | (Rotated(b, "ROT_270") & ~Reflected(b))) =>
            (x + 1 =< {maxXIndex}) &
            (y + 1 =< {maxYIndex}) &
            Has(x + 0, y + 0, b) &
            Has(x + 0, y + 1, b) &
            Has(x + 1, y + 0, b) &
            Has(x + 1, y + 1, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "L") &
        Located(b, x, y) &
        Rotated(b, "ROT_0") & ~Reflected(b) =>
            (x + 1 =< {maxXIndex}) &
            (y - 2 >= 0) &
            Has(x + 0, y - 0, b) &
            Has(x + 1, y - 0, b) &
            Has(x + 0, y - 1, b) &
            Has(x + 0, y - 2, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "L") &
        Located(b, x, y) &
        Rotated(b, "ROT_0") & Reflected(b) =>
            (x - 1 >= 0) &
            (y - 2 >= 0) &
            Has(x - 0, y - 0, b) &
            Has(x - 1, y - 0, b) &
            Has(x - 0, y - 1, b) &
            Has(x - 0, y - 2, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "L") &
        Located(b, x, y) &
        Rotated(b, "ROT_90") & ~Reflected(b) =>
            (x - 2 >= 0) &
            (y - 1 >= 0) &
            Has(x - 0, y - 0, b) &
            Has(x - 0, y - 1, b) &
            Has(x - 1, y - 0, b) &
            Has(x - 2, y - 0, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "L") &
        Located(b, x, y) &
        Rotated(b, "ROT_90") & Reflected(b) =>
            (x + 2 =< {maxXIndex}) &
            (y - 1 >= 0) &
            Has(x + 0, y - 0, b) &
            Has(x + 0, y - 1, b) &
            Has(x + 1, y - 0, b) &
            Has(x + 2, y - 0, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "L") &
        Located(b, x, y) &
        Rotated(b, "ROT_180") & ~Reflected(b) =>
            (x - 1 >= 0) &
            (y + 2 =< {maxYIndex}) &
            Has(x - 0, y + 0, b) &
            Has(x - 1, y + 0, b) &
            Has(x - 0, y + 1, b) &
            Has(x - 0, y + 2, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "L") &
        Located(b, x, y) &
        Rotated(b, "ROT_180") & Reflected(b) =>
            (x + 1 =< {maxXIndex}) &
            (y + 2 =< {maxYIndex}) &
            Has(x + 0, y + 0, b) &
            Has(x + 1, y + 0, b) &
            Has(x + 0, y + 1, b) &
            Has(x + 0, y + 2, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "L") &
        Located(b, x, y) &
        Rotated(b, "ROT_270") & ~Reflected(b) =>
            (x + 2 =< {maxXIndex}) &
            (y + 1 =< {maxYIndex}) &
            Has(x + 0, y + 0, b) &
            Has(x + 0, y + 1, b) &
            Has(x + 1, y + 0, b) &
            Has(x + 2, y + 0, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "L") &
        Located(b, x, y) &
        Rotated(b, "ROT_270") & Reflected(b) =>
            (x - 2 >= 0) &
            (y + 1 =< {maxYIndex}) &
            Has(x - 0, y + 0, b) &
            Has(x - 0, y + 1, b) &
            Has(x - 1, y + 0, b) &
            Has(x - 2, y + 0, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "T") &
        Located(b, x, y) &
        Rotated(b, "ROT_0") =>
            (y - 1 >= 0) &
            (x + 1 =< {maxXIndex}) &
            (x - 1 >= 0) &
            Has(x - 0, y - 0, b) &
            Has(x - 1, y - 0, b) &
            Has(x + 1, y - 0, b) &
            Has(x + 0, y - 1, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "T") &
        Located(b, x, y) &
        ((Rotated(b, "ROT_90") & ~Reflected(b)) | (Rotated(b, "ROT_270") & Reflected(b))) =>
            (x - 1 >= 0) &
            (y + 1 =< {maxYIndex}) &
            (y - 1 >= 0) &
            Has(x - 0, y + 0, b) &
            Has(x - 0, y + 1, b) &
            Has(x - 0, y - 1, b) &
            Has(x - 1, y + 0, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "T") &
        Located(b, x, y) &
        Rotated(b, "ROT_180") =>
            (y + 1 =< {maxYIndex}) &
            (x - 1 >= 0) &
            (x + 1 =< {maxXIndex}) &
            Has(x - 0, y + 0, b) &
            Has(x - 1, y + 0, b) &
            Has(x + 1, y + 0, b) &
            Has(x + 0, y + 1, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "T") &
        Located(b, x, y) &
        ((Rotated(b, "ROT_90") & Reflected(b)) | (Rotated(b, "ROT_270") & ~Reflected(b))) =>
            (x + 1 =< {maxXIndex}) &
            (y - 1 >= 0) &
            (y + 1 =< {maxYIndex}) &
            Has(x + 0, y + 0, b) &
            Has(x + 0, y + 1, b) &
            Has(x + 0, y - 1, b) &
            Has(x + 1, y - 0, b).

{zCommentOpen}

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "Z") &
        Located(b, x, y) &
        Rotated(b, "ROT_0") & ~Reflected(b) =>
            (x + 1 =< {maxXIndex}) &
            (x - 1 >= 0) &
            (y - 1 >= 0) &
            Has(x - 0, y - 0, b) &
            Has(x - 1, y - 0, b) &
            Has(x + 0, y - 1, b) &
            Has(x + 1, y - 1, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "Z") &
        Located(b, x, y) &
        Rotated(b, "ROT_0") & Reflected(b) =>
            (x + 1 =< {maxXIndex}) &
            (x - 1 >= 0) &
            (y - 1 >= 0) &
            Has(x + 0, y - 0, b) &
            Has(x + 1, y - 0, b) &
            Has(x - 0, y - 1, b) &
            Has(x - 1, y - 1, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "Z") &
        Located(b, x, y) &
        Rotated(b, "ROT_90") & ~Reflected(b) =>
            (y + 1 =< {maxYIndex}) &
            (y - 1 >= 0) &
            (x - 1 >= 0) &
            Has(x + 0, y + 0, b) &
            Has(x + 0, y + 1, b) &
            Has(x - 1, y - 0, b) &
            Has(x - 1, y - 1, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "Z") &
        Located(b, x, y) &
        Rotated(b, "ROT_90") & Reflected(b) =>
            (y - 1 >= 0) &
            (y + 1 =< {maxYIndex}) &
            (x + 1 =< {maxXIndex}) &
            Has(x + 0, y + 0, b) &
            Has(x + 0, y + 1, b) &
            Has(x + 1, y - 0, b) &
            Has(x + 1, y - 1, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "Z") &
        Located(b, x, y) &
        Rotated(b, "ROT_180") & ~Reflected(b) =>
            (x - 1 >= 0) &
            (x + 1 =< {maxXIndex}) &
            (y + 1 =< {maxYIndex}) &
            Has(x + 0, y + 0, b) &
            Has(x + 0, y + 1, b) &
            Has(x + 1, y + 0, b) &
            Has(x - 1, y + 1, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "Z") &
        Located(b, x, y) &
        Rotated(b, "ROT_180") & Reflected(b) =>
            (x - 1 >= 0) &
            (x + 1 =< {maxXIndex}) &
            (y + 1 =< {maxYIndex}) &
            Has(x + 0, y + 0, b) &
            Has(x + 0, y + 1, b) &
            Has(x - 1, y + 0, b) &
            Has(x + 1, y + 1, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "Z") &
        Located(b, x, y) &
        Rotated(b, "ROT_270") & ~Reflected(b) =>
            (y - 1 >= 0) &
            (y + 1 =< {maxYIndex}) &
            (x + 1 =< {maxXIndex}) &
            Has(x + 0, y - 0, b) &
            Has(x + 0, y - 1, b) &
            Has(x + 1, y + 0, b) &
            Has(x + 1, y + 1, b).

    !b[Block], x[XIndex], y[YIndex] :
        BlockType(b, "Z") &
        Located(b, x, y) &
        Rotated(b, "ROT_270") & Reflected(b) =>
            (y + 1 =< {maxYIndex}) &
            (y - 1 >= 0) &
            (x - 1 >= 0) &
            Has(x - 0, y - 0, b) &
            Has(x - 0, y - 1, b) &
            Has(x - 1, y + 0, b) &
            Has(x - 1, y + 1, b).

{zCommentClose}

}
